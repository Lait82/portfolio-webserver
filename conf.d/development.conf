# FRONTEND
upstream front_project {
    server front:3000;
    keepalive 32;
}
server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/ssl/localhost.crt;
    ssl_certificate_key /etc/ssl/localhost.key;

    return 301 http://$host$request_uri;
}

server {
    listen 80;
    server_name localhost;


    location / {
        proxy_pass http://front_project/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        # root /var/www/frontend;
        # index index.html;
        # try_files $uri $uri/ /index.html;
    }

    # FLASK API
    location /api/ {
        proxy_pass http://flask_api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # PROTECTED MEDIA FILES
    location /media/ {
        # Validación del token y expiración
        secure_link $arg_token,$arg_expires;
        secure_link_md5 "nginx!s3cre3t0$uri$arg_expires";

        # Rechazos claros
        if ($secure_link = "") {
            return 403;
        }

        if ($secure_link = "0") {
            return 410;
        }

        # Ruta real de los archivos
        root /var/www;

        # Intentar servir el archivo directamente
        try_files $uri =404;

        # Opcional: headers
        expires 1h;
        access_log off;
    }
}